// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/pongsakorn-maker/video-on-demand/ent/schema"
	"github.com/pongsakorn-maker/video-on-demand/ent/user"
	"github.com/pongsakorn-maker/video-on-demand/ent/video"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescFname is the schema descriptor for fname field.
	userDescFname := userFields[0].Descriptor()
	// user.FnameValidator is a validator for the "fname" field. It is called by the builders before save.
	user.FnameValidator = userDescFname.Validators[0].(func(string) error)
	// userDescSname is the schema descriptor for sname field.
	userDescSname := userFields[1].Descriptor()
	// user.SnameValidator is a validator for the "sname" field. It is called by the builders before save.
	user.SnameValidator = userDescSname.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[3].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescTel is the schema descriptor for tel field.
	userDescTel := userFields[4].Descriptor()
	// user.TelValidator is a validator for the "tel" field. It is called by the builders before save.
	user.TelValidator = userDescTel.Validators[0].(func(string) error)
	videoFields := schema.Video{}.Fields()
	_ = videoFields
	// videoDescTitle is the schema descriptor for title field.
	videoDescTitle := videoFields[0].Descriptor()
	// video.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	video.TitleValidator = videoDescTitle.Validators[0].(func(string) error)
	// videoDescDescription is the schema descriptor for description field.
	videoDescDescription := videoFields[1].Descriptor()
	// video.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	video.DescriptionValidator = videoDescDescription.Validators[0].(func(string) error)
	// videoDescURL is the schema descriptor for url field.
	videoDescURL := videoFields[2].Descriptor()
	// video.URLValidator is a validator for the "url" field. It is called by the builders before save.
	video.URLValidator = videoDescURL.Validators[0].(func(string) error)
	// videoDescImgurl is the schema descriptor for imgurl field.
	videoDescImgurl := videoFields[3].Descriptor()
	// video.ImgurlValidator is a validator for the "imgurl" field. It is called by the builders before save.
	video.ImgurlValidator = videoDescImgurl.Validators[0].(func(string) error)
	// videoDescTimestamp is the schema descriptor for timestamp field.
	videoDescTimestamp := videoFields[4].Descriptor()
	// video.DefaultTimestamp holds the default value on creation for the timestamp field.
	video.DefaultTimestamp = videoDescTimestamp.Default.(func() time.Time)
}
